#+TITLE: P3. Arduino


* Ejercicio 1

Se implementa un programa de parpadeo de LED, que encienda y apague 3 LEDs con
un intervalo de 1.5 segundos.

Para este programa se utilizan los pines 13, 12 y 11 para los LEDs.

El programa consiste en encender todos los LEDs y posteriormente apagar todos
los LEDs. Tras cada acción se aplica un retraso (delay) de 1.5 segundos.

#+begin_src C
 void setup()
{
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
}

void loop()
{
  digitalWrite(13, HIGH);
  digitalWrite(12, HIGH);
  digitalWrite(11, HIGH);
  delay(1500);
  digitalWrite(13, LOW);
  digitalWrite(12, LOW);
  digitalWrite(11, LOW);
  delay(1500);
}
#+end_src


* Ejercicio 2

Para este ejercicio se realiza un programa que tras accionar un pulsador se
enciende una luz roja y se apagan 2 luces (amarilla y verde) que previamente
estaban encendidad. Se considera que cuando se suelte el pulsador, se vuelve al
estado inicial.

#+begin_src C
void setup()
{
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(7, INPUT);
}

void loop()
{
  int val;
  val = digitalRead(7);
  digitalWrite(13, !val);
  digitalWrite(12, val);
  digitalWrite(11, val);
}
#+end_src


[[file:screenshots/arduino-pulsador.gif]]


* Ejercicio 3: El coche fantástico

Para este ejercicio se realiza un programa con 4 LEDs con un comportamiento
similar al presentado por las luces del coche fantástico.

#+begin_src C
void setup()
{
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(10, OUTPUT);
}

void loop()
{
  for (int i = 13; i > 10; i--) {
  	digitalWrite(i, HIGH);
    delay(200);
    digitalWrite(i, LOW);
    delay(200);
  }

  for (int i = 10; i < 13; i++) {
  	digitalWrite(i, HIGH);
    delay(200);
    digitalWrite(i, LOW);
    delay(200);
  }

}
#+end_src

Para este programa se realizan dos bucles, uno para cada dirección en la que se
encienden las luces.

[[file:screenshots/coche-fantástico.gif]]
* Ejercicio 4

Para este ejercicio se realiza un programa que funcione como alarma de detección
por presencia. Se emplea el sensor PIR, el cual detecta un objeto próximo a este
y un LED que se enciende cuando el sensor detecta un objeto dentro de su rango.


#+begin_src C
 void setup()
{
  pinMode(13, OUTPUT);
  pinMode(2, INPUT);
}

int val;

void loop()
{

  val = digitalRead(2);

  if (val == HIGH) {
  	digitalWrite(13, HIGH);
    delay(50);
    digitalWrite(13, LOW);
  }
}
#+end_src

Para este ejercicio, se conecta el LED al pin número 13 y el sensor como input
al pin 2.

[[file:screenshots/sensor.gif]]
